version: 2.1

workflows:
  version: 2
  default:
    jobs:
    - unit:
        name: "stage0-unit-py<< matrix.python >>"
        matrix:
          parameters:
            python: ["3.6", "2.7"]
    - rpm:
        name: "stage0-pkg-<< matrix.dist >>"
        matrix:
          parameters:
            dist: [centos8, centos7, centos6]
    - func:
        name: "stage1-func-centos8-pg13"
        requires: [stage0-pkg-centos8]
        dist: centos8
        pgversion: "13"
    - func:
        name: "stage1-func-centos7-pg12"
        requires: [stage0-pkg-centos7]
        dist: centos7
        pgversion: "12"
    - func:
        name: "stage1-func-centos6-pg9.3"
        requires: [stage0-pkg-centos6]
        dist: centos6
        pgversion: "9.3"


jobs:
  func:
    parameters:
      dist:
        description: "Distribution."
        type: string
      pgversion:
        description: "Major dotted version of PostgreSQL."
        type: string
    working_directory: /tmp/ldap2pg
    docker:
      - image: dalibo/labs-sdk:<< parameters.dist >>
      - image: bersace/openldap@sha256:740af91a36b968fc33222b537df35107cccd2f09e6e6aaf28de7828e01ca7986
        environment:
          LDAP_DOMAIN: ldap.ldap2pg.docker
          LDAP_ADMIN_PASSWORD: communication
          LDAP_ORGANISATION: ldap
      - image: postgres:<< parameters.pgversion >>-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: communication
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/ldap2pg/
    - restore_cache:
        keys: [ldap2pg-func]
    - run:
        name: ExÃ©cuting functionnal tests
        command: |
          echo 127.0.1.1 ldap.ldap2pg.docker >> /etc/hosts
          export PGHOST=localhost PGUSER=postgres PGPASSWORD=communication
          export LDAPURI=ldaps://ldap.ldap2pg.docker LDAPPASSWORD=communication
          tests/func/entrypoint.sh
    - save_cache:
        key: ldap2pg-func-{{ epoch }}
        paths:
        - /root/.cache/pip

  rpm:
    parameters:
      dist:
        description: "Distribution."
        type: string
    docker: [{image: "dalibo/labs-sdk:<< parameters.dist >>"}]
    working_directory: /tmp/ldap2pg
    steps:
    - checkout
    - run: ./packaging/build_rpm.sh
    - persist_to_workspace:
        root: /tmp/ldap2pg
        paths: ["dist/"]
    - store_artifacts:
        path: /tmp/ldap2pg/dist/
    - save_cache:
        key: ldap2pg-{{ epoch }}
        paths:
        - /root/.cache/pip
        - "~/.cache/pip/"
        - ".venv"

  unit:
    parameters:
      python:
        description: "Python version"
        type: string
    docker: [{image: "circleci/python:<< parameters.python >>"}]
    working_directory: ~/ldap2pg
    steps:
    - checkout
    - restore_cache:
        keys: [ldap2pg-unit3]
    - run:
        name: Install requirements
        command: |
          sudo apt-get update -y
          sudo apt-get install -y libldap2-dev libsasl2-dev
          sudo pip install wheel virtualenv
          virtualenv .venv/
          . .venv/bin/activate
          pip install --upgrade-strategy=eager -U -r requirements-ci.txt -e .
          pip check
    - save_cache:
        key: ldap2pg-unit3-{{ epoch }}
        paths:
        - /root/.cache/pip
        - "~/.cache/pip/"
        - ".venv"
    - run:
        name: Python tests
        command: |
          . .venv/bin/activate
          set -x
          sort --check .gitignore
          python setup.py --long-description | rst2html.py --strict >/dev/null
          make docs
          git diff --exit-code docs/
          flake8
          pytest tests/unit/
          codecov
